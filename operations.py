import json
import string
import random
from json import JSONDecodeError


def Register_Owner(type, owners_json_file, Username, Full_Name, Email_ID, Password):
    '''Register Function || Return True if registered successfully else False || Already Given'''
    if type.lower() == 'owner':
        f = open(owners_json_file, 'r+')
        d = {
            "Username": Username,
            "Full Name": Full_Name,
            "Email": Email_ID,
            "Password": Password,
        }
        try:
            content = json.load(f)
            if d not in content:
                content.append(d)
                f.seek(0)
                f.truncate()
                json.dump(content, f)
        except JSONDecodeError:
            l = []
            l.append(d)
            json.dump(l, f)
        f.close()
        return True


def Register_Customer(type, customers_json_file, Username, Full_Name, Email_ID, Password, bank_name, account_balance):
    '''Register Function || Return True if registered successfully else False || Already Given'''
    if type.lower() == 'customer':
        f = open(customers_json_file, 'r+')
        d = {
            "Username": Username,
            "Full Name": Full_Name,
            "Email": Email_ID,
            "Password": Password,
            "Bank Name": bank_name,
            "Account Balance": account_balance,
            "Cart": []
        }
        try:
            content = json.load(f)
            if d not in content:
                content.append(d)
                f.seek(0)
                f.truncate()
                json.dump(content, f)
        except JSONDecodeError:
            l = []
            l.append(d)
            json.dump(l, f)
        f.close()
        return True
    else:
        return False


def Login(type, customers_json_file, owners_json_file, Email, Password):
    '''Login Functionality || Return True if successfully logged in else False || Already Given'''
    d = 0
    if type.lower() == 'owner':
        f = open(owners_json_file, 'r+')
    else:
        f = open(customers_json_file, 'r+')
    try:
        content = json.load(f)
    except JSONDecodeError:
        return False
    for i in range(len(content)):
        if content[i]["Email"] == Email and content[i]["Password"] == Password:
            d = 1
            break
    f.seek(0)
    f.truncate()
    json.dump(content, f)
    f.close()
    if d == 0:
        return False
    return True


def AutoGenerate_StockID():
    '''Return a autogenerated random product ID'''
    stock_ID = ''.join(random.choices(
        string.ascii_uppercase+string.digits, k=4))
    return stock_ID


def AutoGenerate_OrderID():
    '''Return a autogenerated random product ID'''
    Order_ID = ''.join(random.choices(
        string.ascii_uppercase+string.digits, k=3))
    return Order_ID


def Create_Stock(stocks_json_file, stock_ID, company_title, owner, stock_name, establishment_year, evaluation, price_per_share, shares_available):
    '''Creating a Stock | Return True if successfully created else False'''
    '''Write your code below'''
    f = open(stocks_json_file, 'r+')
    d = {
        "ID": stock_ID,
        "Company Title": company_title,
        "Owner": owner,
        "Stock Name": stock_name,
        "Establishment Year": establishment_year,
        "Evaluation": evaluation,
        "Price per share": price_per_share,
        "Number of shares": shares_available
    }
    try:
        content = json.load(f)
        if d not in content:
            content.append(d)
            f.seek(0)
            f.truncate()
            json.dump(content, f)
    except JSONDecodeError:
        l = []
        l.append(d)
        json.dump(l, f)
    f.close()


def Update_Stock_Product(stocks_json_file, stock_ID, detail_to_be_updated, new_value):
    '''Updating Stock || Return True if successfully updated else False'''
    '''Write your code below'''
    file = open(stocks_json_file, 'r+')
    content = json.load(file)
    for i in range(len(content)):
        if content[i]["ID"] == stock_ID:
            content[i][detail_to_be_updated] = new_value
        else:
            pass
    file.seek(0)
    file.truncate()
    json.dump(content, file)
    file.close()
    return True


def Fetch_all_Stocks_created_by_Owner(owner, stocks_json_file):
    '''Viewing Stocks created by the admin(owner)'''
    '''Write your code below'''
    l = []
    with open(stocks_json_file, 'r') as f:
        content = json.load(f)
        for product in content:
            if product["Owner"] == owner:
                l.append(product)
    return l


def Delete_Stock(stocks_json_file, stock_ID):
    '''Deleting Stock || Return True if successfully deleted else False'''
    '''Write your code below'''
    file = open(stocks_json_file, 'r+')
    content = json.load(file)
    for i in range(len(content)):
        if content[i]["ID"] == stock_ID:
            del content[i]
        else:
            pass
    file.seek(0)
    file.truncate()
    json.dump(content, file)
    file.close()
    return True


def View_User_Details(customers_json_file, Username):
    '''Return a list with all Customer details based on the username || return an empty list if username not found'''
    '''Write your code below'''
    with open(customers_json_file, 'r') as f:
        l = []
        try:
            content = json.load(f)
            for gamer in content:
                if gamer["Username"] == Username:
                    l.append(gamer)
                    return l
        except JSONDecodeError:
            pass
        return l


def View_all_stocks(stocks_json_file):
    '''Get all Stock created till now || Helper Function || Already Given'''
    '''Write your code below'''
    All_Products_list = []
    f = open(stocks_json_file, 'r+')
    try:
        content = json.load(f)
        All_Products_list = content
        f.close()
    except JSONDecodeError:
        pass
    return All_Products_list


def View_all_Stocks_by_Id(stocks_json_file, stock_ID):
    '''View Stock by ID'''
    '''Write your code below'''
    with open(stocks_json_file, 'r+') as f:
        l = []
        try:
            content = json.load(f)
            for product in content:
                if product["ID"] == stock_ID:
                    l.append(product)
                    return l
        except JSONDecodeError:
            pass
        return l


def Add_item_to_cart(Username, Stock_ID, Quantity, customers_json_file, stocks_json_file):
    '''Add item to the cart || Check whether the quantity mentioned is available || Return True if added successfully else False'''
    '''Add the Stock ID,Company title,Stock Name, Quantity,Total Amount in the cart as list of dictionaries'''
    '''Write your code below'''
    f = open(customers_json_file, 'r+')
    f1 = open(stocks_json_file, 'r+')
    try:
        content = json.load(f)
        content1 = json.load(f1)
        for i in range(len(content1)):
            if content1[i]["ID"] == Stock_ID and content1[i]["Number of shares"] >= Quantity:
                Total_cost = content1[i]["Price per share"]*Quantity
                stock_ID = content1[i]["ID"]
                Company_title = content1[i]["Company Title"]
                stock_name = content1[i]["Stock Name"]
                content1[i]["Number of shares"] -= Quantity
                for j in range(len(content)):
                    if content[j]["Username"] == Username:
                        if content[j]["Account Balance"] >= Total_cost:
                            content[j]["Account Balance"] -= Total_cost
                        else:
                            print("Insufficient Balance")
        d = 0
        for i in range(len(content)):
            if content[i]["Username"] == Username:
                dict = {}
                dict["ID"] = stock_ID
                dict["Company Title"] = Company_title
                dict["Stock Name"] = stock_name
                dict["Quantity"] = Quantity
                dict["Total Amount"] = Total_cost
                content[i]["Cart"].append(dict)
                d = 1
                break
        f.seek(0)
        f.truncate()
        json.dump(content, f)
        f.close()
        f1.seek(0)
        f1.truncate()
        json.dump(content1, f1)
        f1.close()
        if d == 1:
            return True
    except JSONDecodeError:
        return False


def Remove_item_from_cart(Username, stock_ID, customers_json_file):
    '''Remove items from the cart || Return True if removed successfully else False'''
    '''Write your code below'''
    with open(customers_json_file, 'r+') as f:
        try:
            content = json.load(f)
            for i in range(len(content)):
                if content[i]["Username"] == Username:
                    for product in content[i]["Cart"]:
                        if product["ID"] == stock_ID:
                            content[i]["Cart"].remove(product)
                            f.seek(0)
                            f.truncate()
                            json.dump(content, f)
                            return True
                    else:
                        return False
            else:
                return False
        except JSONDecodeError:
            return False


def View_Cart(Username, Customers_json_file):
    '''Return the current cart of the user'''
    '''Write your code below'''
    with open(Customers_json_file, 'r') as f:
        try:
            content = json.load(f)
            for customer in content:
                if customer["Username"] == Username:
                    return customer["Cart"]
        except JSONDecodeError:
            pass


def Place_order(Order_Id, Username, customers_json_file, orders_json_file, stocks_json_file):
    '''Place order || Return True is order placed successfully else False || Decrease the quantity of the Stock orderd if successfull'''
    '''Write your code below'''
    f = open(customers_json_file, 'r+')
    try:
        content = json.load(f)
    except JSONDecodeError:
        return False
    for i in range(len(content)):
        if content[i]["Username"] == Username:
            cart = content[i]["Cart"]
    if len(cart) == 0:
        return False
    f1 = open(stocks_json_file, 'r+')
    try:
        content1 = json.load(f1)
    except JSONDecodeError:
        return False
    f1.seek(0)
    f1.truncate()
    json.dump(content1, f1)
    f1.close()
    f.seek(0)
    f.truncate()
    json.dump(content, f)
    f.close()
    d = {
        "Order ID": Order_Id,
        "Buyer": Username,
        "Items": cart,
    }
    try:
        f2 = open(orders_json_file, 'r+')
        content2 = json.load(f2)
        content2.append(d)
        f2.seek(0)
        f2.truncate()
        json.dump(content2, f2)
        f2.close()
        return True
    except JSONDecodeError:
        l = []
        l.append(d)
        json.dump(l, f2)
        f2.close()
        return True


def Update_Customer(customers_json_file, Username, detail_to_be_updated, updated_detail):
    '''Update the detail_to_be_updated of the user to updated_detail || Return True if successful else False'''
    '''Write your code below'''
    with open(customers_json_file, 'r+') as f:
        try:
            content = json.load(f)
            for i in range(len(content)):
                if content[i]["Username"] == Username:
                    try:
                        a = content[i][detail_to_be_updated]
                    except KeyError:
                        return False
                    content[i][detail_to_be_updated] = updated_detail
                    f.seek(0)
                    f.truncate()
                    json.dump(content, f)
                    return True
            else:
                return False
        except JSONDecodeError:
            return False


def View_all_orders(orders_json_file, Username):
    '''Fetch all previous orders for the user and return them as a list'''
    '''Write your code below'''
    with open(orders_json_file, 'r') as f:
        l = []
        try:
            content = json.load(f)
            for order in content:
                if order["Buyer"] == Username:
                    l.append(order)
        except JSONDecodeError:
            pass
        return l
